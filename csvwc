#!/usr/bin/ruby

require 'csv'
require 'optparse'

begin
  # parse command options
  options = {}
  OptionParser.new do |opt|
    opt.version = "1.0"
    opt.on("-w", "--word", "count words") {options[:w] = true}
    opt.on("-c", "--column", "count columns") {options[:c] = true}
    opt.on("-l", "--line", "count lines") {options[:l] = true}
    opt.on("-h", "--help", "print this message") do
      puts "Usage: #{$0} [options] file [file...]"
      puts (opt.to_s.split("\n"))[1..-1]
      exit 0
    end
    opt.parse!(ARGV)
  end
  options = {:w => true, :c => true, :l => true} if options.empty?
  
  # counts
  results = []
  (ARGV.empty? ? [nil] : ARGV).each do |target|
    payload = target ? CSV.readlines(target) : CSV.parse(STDIN.read)
    r = []
    r << 0 if options[:w]
    r << payload.first.length if options[:c]
    r << payload.length if options[:l]
    r << target
    results << r
  end

  # print results
  results.each do |result|
    result.each do |value|
      case value
      when Integer
        print " %7d" % value
      when String
        print " %s" % value
      end
    end
    print "\n"
  end
  exit 0

rescue => e
  STDERR.puts e.message
  p e.backtrace
  exit 1
end
